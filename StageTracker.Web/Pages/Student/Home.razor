@page "/student"

<PageTitle>Candidat</PageTitle>

<h2>Bonjour, @StudentFullName</h2>

<div class="container mt-5">
    <div class="row justify-content-between">
        <div class="col col-5">
            <EditForm Model="@OfferLiteSearchDto" OnSubmit="@SearchFormSubmit" class="container">
                <h4 class="row">Recherche</h4>
                <div class="row">
                    <div class="row">
                        <label class="form-label">Métier, mot-clé</label>
                        <InputText @bind-Value="OfferLiteSearchDto.SearchTerms" class="form-control"></InputText>
                    </div>

                    <div class="row">
                        <label class="form-label">Lieu</label>
                        <InputText @bind-Value="OfferLiteSearchDto.Location" class="form-control"></InputText>
                    </div>
                    <button type="submit" class="btn btn-submit mt-3">Rechercher</button>
                </div>
            </EditForm>
        </div>
        <div class="col col-5">
            <h4>Mes offres</h4>
            <div class="overflow-y-scroll overflow-x-hidden offer-results">
                @foreach (OfferLiteResultDto OfferLiteResult in OfferLiteResults)
                {
                    <Offer OfferLiteResult="OfferLiteResult" />
                }
            </div>
        </div>
    </div>
</div>

@code{
    private List<OfferLiteResultDto> OfferLiteResults = [
            new(0, "Développeur C#", "Solution métier dans le domaine du bois", "StageTracker_logoB.webp"),
            new(1, "Développeur Cobol", "Maintnenance de nos solution de transaction bancaire", "StageTracker_logoB.webp"),
            new(3, "Développeur C", "Développeur d'application embarqué", "StageTracker_logoB.webp"),
            new(4, "Développeur C++", "Sécurisation de protocole", "StageTracker_logoB.webp"),
            new(5, "Développeur PHP", "Développement et maintenance de site e-commerce", "StageTracker_logoB.webp"),
            new(6, "Développeur Python", "Développement d'application de data science", "StageTracker_logoB.webp"),
            new(7, "Développeur Java", "Développement d'application de gestion", "StageTracker_logoB.webp"),
            new(8, "Développeur JavaScript", "Développement d'application web", "StageTracker_logoB.webp"),
            new(9, "Développeur TypeScript", "Développement d'application web", "StageTracker_logoB.webp"),
            new(10, "Développeur Go", "Développement d'application de gestion", "StageTracker_logoB.webp"),
    ];

    private StudentHomeDto? StudentHomeDto { get; set; }
        
    private OfferLiteSearchDto OfferLiteSearchDto { get; set; } = new();

    private string? StudentFullName { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // Simulate fetching student token from a sAPI

        await Task.Delay(150); // Simulate network delay

        StudentHomeDto = new StudentHomeDto
            {
                FirstName = "John",
                LastName = "Doe",
            };

        StudentFullName = $"{StudentHomeDto.FirstName} {StudentHomeDto.LastName}";
    }

    private void SearchFormSubmit()
    {
        
    }
}
